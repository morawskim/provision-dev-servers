---
- hosts: localhost
  become: true
  connection: local
  tasks:
    # Setup docker
    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'python3-pip']
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_facts['distribution_release'] }} stable
        state: present
    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
    - name: Install required packages via Pip
      pip:
        name:
          - docker
          - jsondiff
          # for ansible, to fetch the lates releases of app from github
          - github3.py
    - name: Start docker
      service: name=docker state=started enabled=yes

    - name: Enable the ppa:ondrej/php repo on Ubuntu systems
      apt_repository:
        repo: ppa:ondrej/php
        update_cache: true

    - name: Enable the ppa:longsleep/golang-backports repo on Ubuntu systems
      apt_repository:
        repo: ppa:longsleep/golang-backports
        update_cache: true

    - name: Add nodejs GPG apt Key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
    - name: Add nodejs Repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_14.x {{ ansible_facts['distribution_release'] }} main
        state: present

    - name: Add skopeo GPG apt Key
      apt_key:
        url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_20.04/Release.key
        state: present
    - name: Add skopeo Repository
      apt_repository:
        repo: deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ ansible_facts['distribution_version'] }}/ /
        state: present
        update_cache: true

    - name: Add asbru-cm GPG apt Key
      apt_key:
        url: https://dl.cloudsmith.io/public/asbru-cm/release/gpg.7684B0670B1C65E8.key
        state: present
    - name: Add asbru-cm Repository
      apt_repository:
        repo: deb https://dl.cloudsmith.io/public/asbru-cm/release/deb/ubuntu {{ ansible_facts['distribution_release'] }} main
        state: present
        update_cache: true

    - name: Update apt
      apt: update_cache=yes
    - name: Install required packages
      package:
        name:
          - jq
          - tmux
          - nodejs
          - pipx
          - python3.8-venv
          - vim
          - whois
          - ipcalc
          - bcal
          - colordiff
          - silversearcher-ag
          - powerline
          - tmuxinator
          - docker-compose
          - gpaste
          - php8.1-cli
          - php8.1-curl
          - php8.1-xml
          - php8.1-xdebug
          - bind9-dnsutils
          - whois
          - skopeo
          - yadm
          - fd-find
          - bat
          - mongodb-clients
          - golang-1.19
          - libxml2-utils
          - dialog
          - sqlite3
          - gawk
          # to build go app which works in Lambda Go Runtime (in future use container)
          - vagrant
          - virtualbox
        state: present
    - name: Install hardware packages
      package:
        name:
          - solaar
          - libturbojpeg #for cameractrls
        state: present
    - name: Add docker to the user's groups
      user:
        name: mmorawski
        groups: docker
        append: yes
    # newer version requires libc6 (>= 2.34)
    - name: Install delta
      apt:
        deb: https://github.com/dandavison/delta/releases/download/0.12.1/git-delta_0.12.1_amd64.deb

    - name: Install tekton cli
      apt:
        deb: https://github.com/tektoncd/cli/releases/download/v0.30.1/tektoncd-cli-0.30.1_Linux-64bit.deb

    - name: Get latest release of dive
      community.general.github_release:
        user: wagoodman
        repo: dive
        action: latest_release
      register: dive_release
      become: false
    - name: Install dive
      apt:
        deb: https://github.com/wagoodman/dive/releases/download/v{{ dive_release.tag | replace('v', '') }}/dive_{{ dive_release.tag | replace('v', '') }}_linux_amd64.deb
    - name: Install MongoDB compass
      apt:
        deb: https://downloads.mongodb.com/compass/mongodb-compass_1.32.5_amd64.deb
    - name: Install fluxctl
      get_url:
        url: https://github.com/fluxcd/flux/releases/download/1.25.2/fluxctl_linux_amd64
        dest: /usr/local/bin/fluxctl
        mode: '0755'
        checksum: sha256:78187b55ef3eac5b18cb26b097fbfb0c6525259867525388de6523c8af841e99
    - name: Install required packages GUI
      package:
        name:
          - ghex
          - peek
          - libreoffice-l10n-pl
          - xclip
          - vim-gtk3
          - gnome-shell-extensions-gpaste
          - kcachegrind
          - gnome-sound-recorder
          - asbru-cm
          - wireshark-qt
          - sqlitebrowser
          - gimp
          - gnome-shell-pomodoro
          - vlc
        state: present
    - name: Install latest dbkoda (mongodb client)
      get_url:
        url: https://s3-us-west-1.amazonaws.com/uswest-nc.release.dbkoda/dbkoda-latest.AppImage
        dest: /usr/local/bin/dbkoda
        mode: '0755'
    - name: Install snap packages
      snap:
        name:
          - ksnip
          - lsd
          - spotify
          - starship
          - httpie
          - pastel
          - peco
          - fx
          - postman
          - htmlq
        state: present
    - name: Install snap classic packages
      snap:
        name:
          - helm
          - code
          - goland
        classic: yes 
        state: present
    - name: Install fzf 0.29
      unarchive:
        src: https://github.com/junegunn/fzf/releases/download/0.29.0/fzf-0.29.0-linux_amd64.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
    - name: Fetch fzf key-bindings for bash
      get_url:
        url: https://raw.githubusercontent.com/junegunn/fzf/0.29.0/shell/key-bindings.bash
        dest: /etc/bash_completion.d/fzf-key-bindings.bash
        mode: '0444'

    - name: Get latest release of kubeseal
      community.general.github_release:
        user: bitnami-labs
        repo: sealed-secrets
        action: latest_release
      register: sealed_secrets_release
      become: false
    - name: Install kubeseal
      unarchive:
        src: https://github.com/bitnami-labs/sealed-secrets/releases/download/v{{ sealed_secrets_release.tag | replace('v', '') }}/kubeseal-{{ sealed_secrets_release.tag | replace('v', '') }}-linux-amd64.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
        creates: /kubeseal
        # in this version of module, we don't have include parameter
        exclude:
          - LICENSE
          - README.md

    - name: Get latest release of kube-prompt
      community.general.github_release:
        user: c-bata
        repo: kube-prompt
        action: latest_release
      register: kube_prompt_release
      become: false
    - name: Install kube-prompt
      unarchive:
        src: https://github.com/c-bata/kube-prompt/releases/download/v{{ kube_prompt_release.tag | replace('v', '') }}/kube-prompt_v{{ kube_prompt_release.tag | replace('v', '') }}_linux_amd64.zip
        dest: /usr/local/bin/
        remote_src: yes
        creates: /kube-prompt

    - name: Get latest release of teller
      community.general.github_release:
        user: tellerops
        repo: teller
        action: latest_release
      register: teller_release
      become: false
    - name: Install teller
      unarchive:
        src: https://github.com/tellerops/teller/releases/download/v{{ teller_release.tag | replace('v', '') }}/teller_{{ teller_release.tag | replace('v', '') }}_Linux_x86_64.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
        creates: /teller

    - name: Install okteto
      get_url:
        url: https://github.com/okteto/okteto/releases/download/2.15.2/okteto-Linux-x86_64
        dest: /usr/local/bin/okteto
        mode: '0755'

    - name: Get latest release of Kdash
      community.general.github_release:
        user: kdash-rs
        repo: kdash
        action: latest_release
      register: kdash_release
      become: false
    - name: Install kdash
      unarchive:
        src: https://github.com/kdash-rs/kdash/releases/download/v{{ kdash_release.tag | replace('v','') }}/kdash-linux-musl.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
        creates: /kdash
    - name: Download composer 2.2.12
      get_url:
        url: https://getcomposer.org/download/2.2.12/composer.phar
        dest: /usr/local/bin/composer-2.2.12
        mode: '0755'
    - name: Install cameractrls
      git:
        repo: "https://github.com/soyersoyer/cameractrls.git"
        dest: "/opt/cameractrls"
        version: "v0.4.14"

    # we have already installed awscli
    - name: Get awscliv2 installer
      unarchive:
        src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: "/tmp"
        remote_src: yes
        creates: /tmp/aws
        mode: 0755
      register: aws_cli_unarchive_installer
    - name: Update awscli package.
      shell: /tmp/aws/install --install-dir /usr/local/aws-cli --bin-dir /usr/local/bin/aws --update
      when: aws_cli_unarchive_installer.changed
    # SAM
    - name: Creates directory
      file:
        path: /tmp/aws-sam
        state: directory
    - name: Get SAM installer
      unarchive:
        src: https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
        dest: "/tmp/aws-sam"
        remote_src: yes
        creates: /tmp/aws-sam/install
        mode: 0755
      register: aws_sam_unarchive_installer
    - name: Update awscli package.
      shell: /tmp/aws-sam/install --install-dir /usr/local/aws-sam-cli --bin-dir /usr/local/bin --update
      when: aws_sam_unarchive_installer.changed
