---
- hosts: localhost
  become: true
  connection: local
  tasks:
    # Setup docker
    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'python3-pip']
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_facts['distribution_release'] }} stable
        state: present
    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
    - name: Install required packages via Pip
      pip:
        name:
          - docker
          - jsondiff
    - name: Start docker
      service: name=docker state=started enabled=yes

    - name: Enable the ppa:ondrej/php repo on Ubuntu systems
      apt_repository:
        repo: ppa:ondrej/php
        update_cache: true

    - name: Add nodejs GPG apt Key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
    - name: Add nodejs Repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_14.x {{ ansible_facts['distribution_release'] }} main
        state: present
    - name: Update apt
      apt: update_cache=yes

    - name: Install required packages
      package:
        name:
          - jq
          - tmux
          - nodejs
          - pipx
          - python3.8-venv
          - vim
          - whois
          - ipcalc
          - bcal
          - colordiff
          - silversearcher-ag
          - powerline
          - tmuxinator
          - docker-compose
          - gpaste
          - php8.1-cli
          - php8.1-xml
          - bind9-dnsutils
          - whois
        state: present
    - name: Add docker to the user's groups
      user:
        name: mmorawski
        groups: docker
        append: yes
    - name: Install delta
      apt:
        deb: https://github.com/dandavison/delta/releases/download/0.12.1/git-delta_0.12.1_amd64.deb
    - name: Install fluxctl
      get_url:
        url: https://github.com/fluxcd/flux/releases/download/1.25.2/fluxctl_linux_amd64
        dest: /usr/local/bin/fluxctl
        mode: '0755'
        checksum: sha256:78187b55ef3eac5b18cb26b097fbfb0c6525259867525388de6523c8af841e99
    - name: Install required packages GUI
      package:
        name:
          - ghex
          - peek
          - libreoffice-l10n-pl
          - xclip
          - vim-gtk3
          - gnome-shell-extensions-gpaste
        state: present
    - name: Install snap packages
      snap:
        name:
          - ksnip
          - lsd
          - spotify
          - kubectx
        state: present
    - name: Install snap classic packages
      snap:
        name:
          - helm
          - code
        classic: yes 
        state: present
    - name: Install fzf 0.29
      unarchive:
        src: https://github.com/junegunn/fzf/releases/download/0.29.0/fzf-0.29.0-linux_amd64.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
    - name: Fetch fzf key-bindings for bash
      get_url:
        url: https://raw.githubusercontent.com/junegunn/fzf/master/shell/key-bindings.bash
        dest: /etc/bash_completion.d/fzf-key-bindings.bash
        mode: '0444'
    - name: Install kubeseal 0.18
      unarchive:
        src: https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.18.0/kubeseal-0.18.0-linux-amd64.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
        creates: /kubeseal
        # in this version of module, we don't have include parameter
        exclude:
          - LICENSE
          - README.md
    - name: Download composer 2.2.12
      get_url:
        url: https://getcomposer.org/download/2.2.12/composer.phar
        dest: /usr/local/bin/composer-2.2.12
        mode: '0755'
