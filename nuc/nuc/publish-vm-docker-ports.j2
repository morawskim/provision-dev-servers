#!/bin/bash

VIRB_NIC=virbr3

if [ "${1}" = "vm-ubuntu-docker" ]; then

   # Update the following variables to fit your setup
   GUEST_IP=192.168.111.10
   GUEST_PORT=80
   HOST_PORT=8888

   if [ "${2}" = "stopped" ] || [ "${2}" = "reconnect" ]; then
        /usr/sbin/iptables -D FORWARD -o $VIRB_NIC -p tcp -d $GUEST_IP --dport $GUEST_PORT -j ACCEPT
        /usr/sbin/iptables -t nat -D PREROUTING -p tcp --dport $HOST_PORT -j DNAT --to $GUEST_IP:$GUEST_PORT
   fi
   if [ "${2}" = "start" ] || [ "${2}" = "reconnect" ]; then
        /usr/sbin/iptables -I FORWARD -o $VIRB_NIC -p tcp -d $GUEST_IP --dport $GUEST_PORT -j ACCEPT
        /usr/sbin/iptables -t nat -I PREROUTING -p tcp --dport $HOST_PORT -j DNAT --to $GUEST_IP:$GUEST_PORT
   fi
fi

if [ "${1}" = "vm-ubuntu-docker" ]; then

   # Update the following variables to fit your setup
   GUEST_IP=192.168.111.10
   GUEST_PORT=443
   HOST_PORT=4433

   if [ "${2}" = "stopped" ] || [ "${2}" = "reconnect" ]; then
        /usr/sbin/iptables -D FORWARD -o $VIRB_NIC -p tcp -d $GUEST_IP --dport $GUEST_PORT -j ACCEPT
        /usr/sbin/iptables -t nat -D PREROUTING -p tcp --dport $HOST_PORT -j DNAT --to $GUEST_IP:$GUEST_PORT
   fi
   if [ "${2}" = "start" ] || [ "${2}" = "reconnect" ]; then
        /usr/sbin/iptables -I FORWARD -o $VIRB_NIC -p tcp -d $GUEST_IP --dport $GUEST_PORT -j ACCEPT
        /usr/sbin/iptables -t nat -I PREROUTING -p tcp --dport $HOST_PORT -j DNAT --to $GUEST_IP:$GUEST_PORT
   fi
fi
